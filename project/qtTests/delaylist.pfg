//получает два числа (X1,X2)
//из ’1 формирует 2 задержанных списка (2*X1 и X1+3)
//X2 - номер того списка, который надо открыть (1 или 2)
qtTests.delayMain1 << funcdef X
{
	return << ((X:2,1):+,{(X:1,2):*},{(X:1,3):+}):qtTests.delayOpener;
}
//получает два задержанных списка A и B 
//и номер того, который надо открыть Y
//в формате (Y,A,B)
qtTests.delayOpener << funcdef X
{
	Y << X:1;
	return << X:Y:.;
}

//получает два числа (Y,Z)
//передает Y во внешнюю функцию, в ответ получа€ два задержанных списка
//открывает список єZ
qtTests.delayMain2 << funcdef X
{
	Y << X:1:qtTests.delayReturner;
	Z << X:2;
	return << Y:Z:.; 
}
//делает из пришедшего числа X два задержанных списка (3*X и X+5)
qtTests.delayReturner << funcdef X
{
	return << ({(X,3):*},{(X,5):+});
}

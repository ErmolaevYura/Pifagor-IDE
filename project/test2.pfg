bigFunc << funcdef X
{
	return << (((X:1,1000):*,(X:2,100):*):+,
		  ((X:3,10):*,X:4):+):+;
}
callBigFunc << funcdef X
{
	return << (1,2,3,4):bigFunc;
}

uncurry << funcdef X		// X = (F2, A2), F2=(f1,X1,…,XM), A2= (XM+1,…,XN)
{
	f2 << X:1;
	f1 << f2:1;
	argsFull << (f2:-1:[],X:-1:[]);
	return << argsFull:f1;
}

callUncurry << funcdef X
{
	return << ((bigFunc,5,6),7,8):uncurry;
}

asListTest2 << funcdef A
{
	o1 << (1,2):+;
	o2 << (o1,3):-;
	o3 << (o2,4):*;
	o4 << (o3,5):+;
	o5 << (o4,6):-;
	o6 << (o5,7):*;
	o7 << (o6,1):-;
	one << (o6,o7):-;
	two << 2;
	three << 3;
	asList << async(one,two,three);
	x << asList:1;
	t1 << asList:-1;
	tdList << (t1,1,2);
	newt1 << tdList:1;
	y << newt1:1;
	t2 << newt1:-1;
	z << t2:1;
	return << (x,y,z);
}
asListTest0 << funcdef X
{
	asList << async (1,2,3);
	return << (asList,4,5);
}